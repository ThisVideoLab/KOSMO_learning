package chap12.EX01;

//1. 추상 메소드를 사용하는 2번째 방법(abstractCalss_1파일로부터 이어짐)
//   : 자식 클래스 생성 없이 익명 클래스를 활용하는 방법 - 1회성으로 임시적으로 사용할 경우에 이벤트 처리함.

abstract class AAA{ // 2. 추상 클래스를 만들고, 추상 메서드를 포함시킴
	abstract void abc(); 
}

public class AbstractClass_2 {

	public static void main(String[] args) {
		
		//3. 익명 개체 생성 후 호출
		//4. 먼저 객체 생성해주기. 이렇게만 만들면 당연히 오류가 남.
		AAA aaa = new AAA(){
			void abc() { 
				System.out.println("방법2: 객체 생성 없이 익명클래스로 추상메서드 구현"); // 6. 그 후 이렇게 추상 클래스에 있는 메소드를 재정의(실행부 삽입) 해줌
			}
		}; // 5. 하지만 객체 끝에 세미 콜론을 붙이면 1회용 사용이 가능해짐.
		aaa.abc(); // 7. 그 후에 이렇게 생성자를 넣어서 출력해줌.
				   // 8. 장점은 임시적으로 사용할 경우에는 간단하게 사용이 가능함.
				   // 9. 반대로 단점은, 당연하게도 재사용하려면 매번 만들어줘야 한다는 것. 그래 그럴때는 자식 클래스를 통해 오버라이딩하는 방법이 좋음.
		
		
	}

}
